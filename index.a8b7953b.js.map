{"mappings":"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","sources":["src/view.js"],"sourcesContent":["class View {\r\n    constructor({\r\n        addFilm,\r\n        deleteFilmFromArray,\r\n        doneFilmInArray\r\n    }) {\r\n        this.filmInputNode = document.querySelector(\"#filmInput\");\r\n        this.validationMessageNode = document.querySelector(\"#validationMessage\");\r\n        this.filmFormNode = document.querySelector(\"#filmForm\");\r\n        this.addFilmButtonNode = document.querySelector(\"#addButton\");\r\n        this.filmListNode = document.querySelector(\"#filmList\");\r\n\r\n        this.addFilm = addFilm;\r\n        this.deleteFilmFromArray = deleteFilmFromArray;\r\n        this.doneFilmInArray = doneFilmInArray;\r\n\r\n        this.filmInputNode.addEventListener(\"input\", this._checkButton);\r\n        this.filmFormNode.addEventListener(\"submit\", this._submitForm);\r\n        this.filmListNode.addEventListener('click', this._deleteFilm);\r\n        this.filmListNode.addEventListener('click', this._doneFilm);\r\n    }\r\n\r\n    _validateInput = (lengthString) => {\r\n        this.validationMessageNode.innerHTML = `${parseInt(lengthString)}/100`;\r\n    };\r\n\r\n    _checkButton = () => {\r\n        const INIT_SUM_SYMBOLS = 0;\r\n        const MAX_SYMBOLS_IN_INPUT = 100;\r\n        const lengthString = this.filmInputNode.value.length;\r\n\r\n        this._validateInput(lengthString);\r\n        if (\r\n            lengthString > INIT_SUM_SYMBOLS &&\r\n            lengthString <= MAX_SYMBOLS_IN_INPUT\r\n        ) {\r\n            this.addFilmButtonNode.disabled = false;\r\n        } else {\r\n            this.addFilmButtonNode.disabled = true;\r\n        }\r\n    };\r\n\r\n    _clearInput = () => {\r\n        const INIT_VALIDATION = \"0/100\"\r\n        this.filmInputNode.value = \"\";\r\n        this.validationMessageNode.innerHTML = INIT_VALIDATION;\r\n        this.filmInputNode.focus();\r\n    }\r\n\r\n    _submitForm = (event) => {\r\n        //отменяет стандартное поведение браузера\r\n        //при отправке формы не обновляет страницу\r\n        event.preventDefault();\r\n        const film = this.filmInputNode.value.trim();\r\n        if (!film) {\r\n            this._clearInput()\r\n            return\r\n        }\r\n        this._clearInput()\r\n        //функция добавляет в модели новый фильм в массив \r\n        this.addFilm(film)\r\n    };\r\n\r\n    render = (films) => {\r\n        console.log(films)\r\n        this.filmListNode.innerHTML = \"\"\r\n        films.forEach(elem => {\r\n            this._renderFilm(elem);\r\n        });\r\n    };\r\n\r\n    _renderFilm = (elem) => {\r\n        const li = document.createElement('li');\r\n        li.id = elem.id;\r\n        li.classList.add(\"filmItem\");\r\n\r\n        const div = document.createElement('div');\r\n        div.class = \"filmItem__checkWrapper\";\r\n\r\n        const input = document.createElement('input');\r\n        input.type = \"checkbox\";\r\n        input.dataset.action = \"done\";\r\n        input.id = `checkFilm${elem.id}`;\r\n        input.classList.add(\"filmItem__check\");\r\n        if (elem.done) {\r\n            input.checked = true;\r\n            li.classList.add('filmItem-disabled')\r\n        };\r\n\r\n        const label = document.createElement('label');\r\n        label.setAttribute('for', `checkFilm${elem.id}`);\r\n        label.innerText = elem.film;\r\n\r\n        const button = document.createElement('button');\r\n        button.classList.add(\"filmItem__delete\");\r\n        button.dataset.action = \"delete\";\r\n        button.innerHTML = `<img src=\"resources/button-close.png\" alt=\"X\">`\r\n\r\n        div.append(input, label);\r\n        li.append(div, button);\r\n        this.filmListNode.append(li);\r\n    }\r\n\r\n    _deleteFilm = (event) => {\r\n        if (event.target.dataset.action !== \"delete\") {\r\n            return;\r\n        }\r\n        const currentParentNode = event.target.closest('.filmItem')\r\n        const idItem = currentParentNode.id;\r\n        this.deleteFilmFromArray(idItem);\r\n    };\r\n\r\n    _doneFilm = (event) => {\r\n        if (event.target.dataset.action !== \"done\") {\r\n            return;\r\n        }\r\n        const currentParentNode = event.target.closest('.filmItem')\r\n        const idItem = currentParentNode.id;\r\n        this.doneFilmInArray(idItem);\r\n    }\r\n\r\n}\r\n"],"names":[],"version":3,"file":"index.a8b7953b.js.map","sourceRoot":"/__parcel_source_root/"}